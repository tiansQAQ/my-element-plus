@use 'sass:map'; // https://www.cnblogs.com/aidixie/p/10345373.html https://www.sass.hk/skill/sass84.html

/*变量声明  config.scss*/

$namespace: 'el' !default;
$common-separator: '-' !default;
$element-separator: '__' !default;
$modifier-separator: '--' !default;
$state-prefix: 'is-' !default;

/* 混入 mixins.scss */

// @mixin 指令允许我们定义一个可以在整个样式表中重复使用的样式。@include 指令可以将混入（mixin）引入到文档中

// 将局部变量转换为全局变量可以添加 !global 声明

// 通过 #{} 插值语句可以在选择器或属性名中使用变量

// `@content`用在`mixin`里面的，当定义一个`mixin`后，并且设置了`@content`； `@include`的时候可以传入相应的内容到`mixin`里面

// BEM el-card
@mixin b($block) {
  $B: $namespace + $common-separator + $block !global;
  .#{$B} {
    @content;
  }
}

@mixin e($element) {
  $E: $element !global;
  $selector: &;
  $currentSelector: '';
  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @if hitAllSpecialNestRule($selector) {
    @at-root {
      #{$selector} {
        #{$currentSelector} {
          @content;
        }
      }
    }
  } @else {
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
}

@mixin m($modifier) {
  $selector: &;
  $currentSelector: '';
  // &--success,
  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + $selector + $modifier-separator + $unit + ','};
  }

  // 当使用 & 选择器时，就算你不想嵌套选择器，Sass也会自动嵌套。但往往很多时候，我们是不想要嵌套选择器，例如BEM
  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

/* _var.scss */

// 设置组件的 css var
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == 'default' {
      #{getCssVarName($name)}: #{$value};
    } @else {
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

/* function scss */

// joinVarName(('card', 'padding')) => '--el-card-padding'
@function joinVarName($list) {
  $name: '--' + $namespace;
  @each $item in $list {
    @if $item != '' {
      $name: $name + '-' + $item;
    }
  }
  @return $name;
}

// https://blog.51cto.com/u_15652665/5330439
// getCssVar('card', 'border-color') => var(--el-card-border-color)
@function getCssVar($args...) {
  @return var(#{joinVarName($args)});
}

// getCssVarName('card', 'border-color') => '--el-card-border-color'
@function getCssVarName($args...) {
  @return joinVarName($args);
}

/* common/var.scss */

// Card
$card: () !default;
// map-merge(("foo": 1), ("bar": 2)) => ("foo": 1, "bar": 2)
$card: map.merge(
  (
    'border-color': getCssVar('border-color', 'light'),
    'border-radius': 4px,
    'padding': 20px,
    'bg-color': getCssVar('fill-color', 'blank')
  ),
  $card
);

$border-color: () !default;
$border-color: map.merge(
  (
    '': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
    'dark': #d4d7de,
    'darker': #cdd0d6
  ),
  $border-color
);

// Background
$bg-color: () !default;
$bg-color: map.merge(
  (
    '': #ffffff,
    'page': #f2f3f5,
    'overlay': #ffffff
  ),
  $bg-color
);

$fill-color: () !default;
$fill-color: map.merge(
  (
    '': #f0f2f5,
    'light': #f5f7fa,
    'lighter': #fafafa,
    'extra-light': #fafcff,
    'dark': #ebedf0,
    'darker': #e6e8eb,
    'blank': #ffffff
  ),
  $fill-color
);

$text-color: () !default;
$text-color: map.merge(
  (
    'primary': #303133,
    'regular': #606266,
    'secondary': #909399,
    'placeholder': #a8abb2,
    'disabled': #c0c4cc
  ),
  $text-color
);

$transition-duration: () !default;
$transition-duration: map.merge(
  (
    '': 0.3s,
    'fast': 0.2s
  ),
  $transition-duration
);

// Box-shadow
$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.04),
      0px 8px 20px rgba(0, 0, 0, 0.08)
    ),
    'light': (
      0px 0px 12px rgba(0, 0, 0, 0.12)
    ),
    'lighter': (
      0px 0px 6px rgba(0, 0, 0, 0.12)
    ),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.08),
      0px 12px 32px rgba(0, 0, 0, 0.12),
      0px 8px 16px -8px rgba(0, 0, 0, 0.16)
    )
  ),
  $box-shadow
);
/* src/var.scss */

:root {
  // --el-border-color-#{$type}
  @include set-component-css-var('border-color', $border-color);

  // Background --el-bg-color-#{$type}
  @include set-component-css-var('bg-color', $bg-color);

  // Fill --el-fill-color-#{$type}
  @include set-component-css-var('fill-color', $fill-color);

  // --el-text-color-#{$type}
  @include set-component-css-var('text-color', $text-color);

  // Transition
  // refer to this website to get the bezier motion function detail
  // https://cubic-bezier.com/#p1,p2,p3,p4 (change px as your function parameter)
  @include set-component-css-var('transition-duration', $transition-duration);

  // --el-box-shadow-#{$type}
  @include set-component-css-var('box-shadow', $box-shadow);
}
